# Based on http://nginx.org/en/docs/http/load_balancing.html
upstream backend {
  #ip_hash;
  web1_1:8080;
  web2_1:8080;
}
  server {  
    listen 80;
    server_name *.us-east-2.compute.amazonaws.com;
location ^~ /.well-known {
      allow all;
      root  /etc/letsencrypt/;
    }
location / {
      return 301 https://$host$request_uri;
    }
  }      

server {
  listen   443 default_server;
  server_name   *.us-east-2.compute.amazonaws.com;
  ssl on;
  ssl_certificate /etc/letsencrypt/live/us-east-2.compute.amazonaws.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/us-east-2.compute.amazonaws.com/privkey.pem;

  location ~* \/static\/(images|styles)\/* {
    root          /usr/share/nginx/assets;
    expires       max;
    add_header    Pragma public;
    add_header    Cache-Control "public, must-revalidate, proxy-revalidate";
    add_header    Vary Accept-Encoding;
    access_log    off;
  }

  location / {
    proxy_set_header    Host $host;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    Host $proxy_host;
    add_header          Request-Time $request_time;
    add_header          Upstream-Address $upstream_addr;
    add_header          Upstream-Response-Time $upstream_response_time;
    proxy_pass          http://backend;
  }

  error_page  404   /404.html;

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  location /nginx_status {
    stub_status    on;
    access_log     off;
  }
}
server {
  listen        80;
  server_name   proxy;

  location ~* \/static\/(images|styles)\/* {
    root          /usr/share/nginx/assets;
    expires       max;
    add_header    Pragma public;
    add_header    Cache-Control "public, must-revalidate, proxy-revalidate";
    add_header    Vary Accept-Encoding;
    access_log    off;
  }

  location / {
    proxy_set_header    Host $host;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    Host $proxy_host;
    add_header          Request-Time $request_time;
    add_header          Upstream-Address $upstream_addr;
    add_header          Upstream-Response-Time $upstream_response_time;
    proxy_pass          http://backend;
  }

  error_page  404   /404.html;

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  location /nginx_status {
    stub_status    on;
    access_log     off;
  }
}
